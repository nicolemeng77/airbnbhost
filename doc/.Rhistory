wilcox.test(data[data$neighbourhood_group == 'Staten Island',]$price,
data[data$neighbourhood_group == 'Queens',]$price)
#p-value = 0.3391, no significant difference in these two boroughs.
###neighbourhood###
dat_m <- dat2[neighbourhood_group %in% c("Manhattan", "Brooklyn")]
m_count <- dat_m[,.N,keyby = neighbourhood]
setorderv(m_count,"N",order = -1)
m_count
barplot(m_count$N[1:5], names.arg = m_count$neighbourhood[1:5],cex.names = 0.9)
load("../data/orig_data.RData")
library(tidyverse)
library(MASS)
library(scales)
library(data.table)
#ignore useless variables
data <- orig_data %>% dplyr::select(id,name,description, transit, house_rules, host_since, host_is_superhost,
host_listings_count, host_identity_verified, neighbourhood_cleansed,
neighbourhood_group_cleansed, zipcode, latitude, longitude, property_type,
room_type, accommodates, bathrooms, bedrooms, beds,bed_type, amenities,
square_feet, price, weekly_price, cleaning_fee, minimum_nights, availability_365,
number_of_reviews, instant_bookable, cancellation_policy,
require_guest_phone_verification,
host_response_time, host_verifications, security_deposit)
#host_has_profile_pic,  host_identity_verified
#or just read the condensed listings(with different filters)
#data = read.csv("listings_condensed.csv",header = T)
nrow(data)
colnames(data)
#rename variable
data <- data %>%
rename(neighbourhood = neighbourhood_cleansed,
neighbourhood_group = neighbourhood_group_cleansed)
#data structure
data <- data %>%
mutate_if(is.logical, as.numeric) %>% # convert True False to 1,0
mutate_at(c("neighbourhood", "neighbourhood_group", "property_type",
"room_type", "bed_type", "cancellation_policy", 'host_is_superhost',
'host_identity_verified', 'instant_bookable', 'require_guest_phone_verification',
'host_response_time'),
as.factor)
#edit data value
convert_price <- function(x) as.numeric(gsub("\\$|,", "", x))
string_split <- function(x) str_split(gsub("\\{|\\}|\"", "", x),",")
data <- data %>%
mutate_at(c("price", "weekly_price", "cleaning_fee", "security_deposit"), convert_price) %>%
mutate_at("amenities", string_split) %>%
mutate_at('host_verifications', string_split) %>%
mutate(hosted_years = round(as.double(difftime(Sys.Date(), host_since)) / 365, 1))
data <- data %>%
mutate(number_of_amenities = lengths(amenities)) %>%
mutate(number_of_verifications = lengths(host_verifications))
#amenity
data <- data %>%
mutate(amenities = tolower(amenities)) %>%
mutate(house_rules = tolower(house_rules)) %>%
mutate(name = tolower(name)) %>%
mutate(transit_level = as.numeric(is.na(transit))) %>%  #1:has description, 0:NA
mutate(rule_Pets = ifelse(grepl("no pets", data$house_rules), 0, 1)) %>%
mutate(have_pet = ifelse(grepl("cat", data$amenities) |
grepl("dog", data$amenities) |
grepl("pet", data$amenities), 1, 0)) %>%
mutate(have_shampoo = ifelse(grepl("shampoo", data$amenities), 1, 0)) %>%
mutate(have_gym = ifelse(grepl("gym", data$amenities), 1, 0)) %>%
mutate(have_washer = ifelse(grepl("washer", data$amenities), 1, 0)) %>%
mutate(have_kitchen = ifelse(grepl("kitchen", data$amenities), 1, 0)) %>%
mutate(have_parking = ifelse(grepl("parking", data$amenities), 1, 0)) %>%
mutate(have_elevator = ifelse(grepl("elevator", data$amenities), 1, 0)) %>%
mutate(have_laptop_workspac = ifelse(grepl("Laptop friendly workspace", data$amenities), 1, 0))
#property_type (combine factors)
data <- data.table(data)
data <- data[property_type %in% c("Barn", "Bed and breakfast", "Boat", "Bungalow","Bus","Cabin","Camper/RV","Casa particular (Cuba)", "Castle","Cave","Cottage","Dome house","Earth house","Farm stay","Houseboat","Island","Nature lodge","Other","Tent","Timeshare","Tiny house","Yurt"), property_type:= "Others"]
data <- data[property_type %in% c("Townhouse", "House", "Guesthouse", "Resort","Villa","Tiny house"), property_type:= "House"]
data <- data[property_type %in% c("Apartment","Condominium","Guest suite","Serviced apartment"), property_type:= "Apartment"]
data <- data[property_type %in% c("Hostel","Hotel","Boutique hotel","Aparthotel"), property_type:= "Hotel"]
data <- data[grepl("loft", data$name), property_type := "Loft"]
# Outliers
# need to check: accommodates, bathrooms, bedrooms, beds, price, cleaning_fee, minimum_nights, number_of_reviews...
### ATTENTION many 0 bedroom!
### ATTENTION many outliers in security_deposit
nrow(data)  #48377
# nrow(data %>% filter(beds > 20)) #5
# nrow(data %>% filter(bedrooms > 20)) #1
# nrow(data %>% filter(bedrooms == 1 & bathrooms > 4)) #39    ##1 bedroom & 3+ bathrooms usually comes with price under 100
# nrow(data %>% filter(price > 1500)) #137
# nrow(data %>% filter(cleaning_fee > 200 & minimum_nights < 30)) #381   ##prefer not to use cleaning_fee
# nrow(data %>% filter(minimum_nights > 90)) #361
# hist(data$number_of_reviews)
# hist(data$hosted_years)
data <- data  %>%
filter(beds <= 20, bedrooms <= 20,
bedrooms != 1 | bathrooms <= 4,
price < 1500 & price > 0,
cleaning_fee <= 200 | minimum_nights >= 30,
minimum_nights <= 90) %>%
filter(property_type != "Others") #havn't decided
nrow(data)  #37989
#check missing value
colSums(is.na(data))
# data <- data %>%
#   select(-c(weekly_price, square_feet, security_deposit))
data <- data[is.na(host_is_superhost), host_is_superhost := "0"]
data <- data %>%
mutate(host_is_superhost = ifelse(is.na(host_is_superhost), 0, 1))
data$host_is_superhost
table(data$host_is_superhost)
load("../data/orig_data.RData")
library(tidyverse)
library(MASS)
library(scales)
library(data.table)
#ignore useless variables
data <- orig_data %>% dplyr::select(id,name,description, transit, house_rules, host_since, host_is_superhost,
host_listings_count, host_identity_verified, neighbourhood_cleansed,
neighbourhood_group_cleansed, zipcode, latitude, longitude, property_type,
room_type, accommodates, bathrooms, bedrooms, beds,bed_type, amenities,
square_feet, price, weekly_price, cleaning_fee, minimum_nights, availability_365,
number_of_reviews, instant_bookable, cancellation_policy,
require_guest_phone_verification,
host_response_time, host_verifications, security_deposit)
#host_has_profile_pic,  host_identity_verified
#or just read the condensed listings(with different filters)
#data = read.csv("listings_condensed.csv",header = T)
nrow(data)
colnames(data)
#rename variable
data <- data %>%
rename(neighbourhood = neighbourhood_cleansed,
neighbourhood_group = neighbourhood_group_cleansed)
#data structure
data <- data %>%
mutate_if(is.logical, as.numeric) %>% # convert True False to 1,0
mutate_at(c("neighbourhood", "neighbourhood_group", "property_type",
"room_type", "bed_type", "cancellation_policy", 'host_is_superhost',
'host_identity_verified', 'instant_bookable', 'require_guest_phone_verification',
'host_response_time'),
as.factor)
#edit data value
convert_price <- function(x) as.numeric(gsub("\\$|,", "", x))
string_split <- function(x) str_split(gsub("\\{|\\}|\"", "", x),",")
data <- data %>%
mutate_at(c("price", "weekly_price", "cleaning_fee", "security_deposit"), convert_price) %>%
mutate_at("amenities", string_split) %>%
mutate_at('host_verifications', string_split) %>%
mutate(hosted_years = round(as.double(difftime(Sys.Date(), host_since)) / 365, 1))
data <- data %>%
mutate(number_of_amenities = lengths(amenities)) %>%
mutate(number_of_verifications = lengths(host_verifications))
data <- data %>%
mutate(host_is_superhost = ifelse(is.na(host_is_superhost), 0, host_is_superhost))
#amenity
data <- data %>%
mutate(amenities = tolower(amenities)) %>%
mutate(house_rules = tolower(house_rules)) %>%
mutate(name = tolower(name)) %>%
mutate(transit_level = as.numeric(is.na(transit))) %>%  #1:has description, 0:NA
mutate(rule_Pets = ifelse(grepl("no pets", data$house_rules), 0, 1)) %>%
mutate(have_pet = ifelse(grepl("cat", data$amenities) |
grepl("dog", data$amenities) |
grepl("pet", data$amenities), 1, 0)) %>%
mutate(have_shampoo = ifelse(grepl("shampoo", data$amenities), 1, 0)) %>%
mutate(have_gym = ifelse(grepl("gym", data$amenities), 1, 0)) %>%
mutate(have_washer = ifelse(grepl("washer", data$amenities), 1, 0)) %>%
mutate(have_kitchen = ifelse(grepl("kitchen", data$amenities), 1, 0)) %>%
mutate(have_parking = ifelse(grepl("parking", data$amenities), 1, 0)) %>%
mutate(have_elevator = ifelse(grepl("elevator", data$amenities), 1, 0)) %>%
mutate(have_laptop_workspac = ifelse(grepl("Laptop friendly workspace", data$amenities), 1, 0))
#property_type (combine factors)
data <- data.table(data)
data <- data[property_type %in% c("Barn", "Bed and breakfast", "Boat", "Bungalow","Bus","Cabin","Camper/RV","Casa particular (Cuba)", "Castle","Cave","Cottage","Dome house","Earth house","Farm stay","Houseboat","Island","Nature lodge","Other","Tent","Timeshare","Tiny house","Yurt"), property_type:= "Others"]
data <- data[property_type %in% c("Townhouse", "House", "Guesthouse", "Resort","Villa","Tiny house"), property_type:= "House"]
data <- data[property_type %in% c("Apartment","Condominium","Guest suite","Serviced apartment"), property_type:= "Apartment"]
data <- data[property_type %in% c("Hostel","Hotel","Boutique hotel","Aparthotel"), property_type:= "Hotel"]
data <- data[grepl("loft", data$name), property_type := "Loft"]
table(host_is_superhost)
table(data$host_is_superhost)
View(orig_data)
table(orig_data$host_is_superhost)
data$host_is_superhost %>%head()
data$host_is_superhost
#data structure
data <- data %>%
mutate_if(is.logical, as.numeric) %>% # convert True False to 1,0
mutate_at(c("neighbourhood", "neighbourhood_group", "property_type",
"room_type", "bed_type", "cancellation_policy", 'host_is_superhost',
'host_identity_verified', 'instant_bookable', 'require_guest_phone_verification',
'host_response_time'),
as.factor)
data$host_is_superhost
load("../data/orig_data.RData")
library(tidyverse)
library(MASS)
library(scales)
library(data.table)
#ignore useless variables
data <- orig_data %>% dplyr::select(id,name,description, transit, house_rules, host_since, host_is_superhost,
host_listings_count, host_identity_verified, neighbourhood_cleansed,
neighbourhood_group_cleansed, zipcode, latitude, longitude, property_type,
room_type, accommodates, bathrooms, bedrooms, beds,bed_type, amenities,
square_feet, price, weekly_price, cleaning_fee, minimum_nights, availability_365,
number_of_reviews, instant_bookable, cancellation_policy,
require_guest_phone_verification,
host_response_time, host_verifications, security_deposit)
#host_has_profile_pic,  host_identity_verified
#or just read the condensed listings(with different filters)
#data = read.csv("listings_condensed.csv",header = T)
data$host_is_superhost
data <- data %>%
mutate_if(is.logical, as.numeric)
data$host_is_superhost
data <- data %>%
mutate_if(is.logical, as.numeric) %>% # convert True False to 1,0
mutate_at(c("neighbourhood", "neighbourhood_group", "property_type",
"room_type", "bed_type", "cancellation_policy", 'host_is_superhost',
'host_identity_verified', 'instant_bookable', 'require_guest_phone_verification',
'host_response_time'),
as.factor)
#rename variable
data <- data %>%
rename(neighbourhood = neighbourhood_cleansed,
neighbourhood_group = neighbourhood_group_cleansed)
#data structure
data <- data %>%
mutate_if(is.logical, as.numeric) %>% # convert True False to 1,0
mutate_at(c("neighbourhood", "neighbourhood_group", "property_type",
"room_type", "bed_type", "cancellation_policy", 'host_is_superhost',
'host_identity_verified', 'instant_bookable', 'require_guest_phone_verification',
'host_response_time'),
as.factor)
data$host_is_superhost
#edit data value
convert_price <- function(x) as.numeric(gsub("\\$|,", "", x))
string_split <- function(x) str_split(gsub("\\{|\\}|\"", "", x),",")
data <- data %>%
mutate_at(c("price", "weekly_price", "cleaning_fee", "security_deposit"), convert_price) %>%
mutate_at("amenities", string_split) %>%
mutate_at('host_verifications', string_split) %>%
mutate(hosted_years = round(as.double(difftime(Sys.Date(), host_since)) / 365, 1))
data <- data %>%
mutate(number_of_amenities = lengths(amenities)) %>%
mutate(number_of_verifications = lengths(host_verifications))
data <- data %>%
mutate(host_is_superhost = ifelse(is.na(host_is_superhost), 0, host_is_superhost))
#amenity
data <- data %>%
mutate(amenities = tolower(amenities)) %>%
mutate(house_rules = tolower(house_rules)) %>%
mutate(name = tolower(name)) %>%
mutate(transit_level = as.numeric(is.na(transit))) %>%  #1:has description, 0:NA
mutate(rule_Pets = ifelse(grepl("no pets", data$house_rules), 0, 1)) %>%
mutate(have_pet = ifelse(grepl("cat", data$amenities) |
grepl("dog", data$amenities) |
grepl("pet", data$amenities), 1, 0)) %>%
mutate(have_shampoo = ifelse(grepl("shampoo", data$amenities), 1, 0)) %>%
mutate(have_gym = ifelse(grepl("gym", data$amenities), 1, 0)) %>%
mutate(have_washer = ifelse(grepl("washer", data$amenities), 1, 0)) %>%
mutate(have_kitchen = ifelse(grepl("kitchen", data$amenities), 1, 0)) %>%
mutate(have_parking = ifelse(grepl("parking", data$amenities), 1, 0)) %>%
mutate(have_elevator = ifelse(grepl("elevator", data$amenities), 1, 0)) %>%
mutate(have_laptop_workspac = ifelse(grepl("Laptop friendly workspace", data$amenities), 1, 0))
#property_type (combine factors)
data <- data.table(data)
data <- data[property_type %in% c("Barn", "Bed and breakfast", "Boat", "Bungalow","Bus","Cabin","Camper/RV","Casa particular (Cuba)", "Castle","Cave","Cottage","Dome house","Earth house","Farm stay","Houseboat","Island","Nature lodge","Other","Tent","Timeshare","Tiny house","Yurt"), property_type:= "Others"]
data <- data[property_type %in% c("Townhouse", "House", "Guesthouse", "Resort","Villa","Tiny house"), property_type:= "House"]
data <- data[property_type %in% c("Apartment","Condominium","Guest suite","Serviced apartment"), property_type:= "Apartment"]
data <- data[property_type %in% c("Hostel","Hotel","Boutique hotel","Aparthotel"), property_type:= "Hotel"]
data <- data[grepl("loft", data$name), property_type := "Loft"]
data$host_is_superhost
#ignore useless variables
data <- orig_data %>% dplyr::select(id,name,description, transit, house_rules, host_since, host_is_superhost,
host_listings_count, host_identity_verified, neighbourhood_cleansed,
neighbourhood_group_cleansed, zipcode, latitude, longitude, property_type,
room_type, accommodates, bathrooms, bedrooms, beds,bed_type, amenities,
square_feet, price, weekly_price, cleaning_fee, minimum_nights, availability_365,
number_of_reviews, instant_bookable, cancellation_policy,
require_guest_phone_verification,
host_response_time, host_verifications, security_deposit)
#host_has_profile_pic,  host_identity_verified
#or just read the condensed listings(with different filters)
#data = read.csv("listings_condensed.csv",header = T)
nrow(data)
colnames(data)
# nrow(data)
# colnames(data)
sum(is.na(host_is_superhost))
sum(is.na(data$host_is_superhost))
#data structure
data <- data %>%
mutate(host_is_superhost = ifelse(is.na(host_is_superhost), 0, host_is_superhost))
sum(is.na(data$host_is_superhost))
data$host_is_superhost
data <- data %>%
mutate_if(is.logical, as.numeric) %>% # convert True False to 1,0
mutate_at(c("neighbourhood", "neighbourhood_group", "property_type",
"room_type", "bed_type", "cancellation_policy", 'host_is_superhost',
'host_identity_verified', 'instant_bookable', 'require_guest_phone_verification',
'host_response_time'),
as.factor)
#rename variable
data <- data %>%
rename(neighbourhood = neighbourhood_cleansed,
neighbourhood_group = neighbourhood_group_cleansed)
#data structure
data <- data %>%
mutate(host_is_superhost = ifelse(is.na(host_is_superhost), 0, host_is_superhost))
data <- data %>%
mutate_if(is.logical, as.numeric) %>% # convert True False to 1,0
mutate_at(c("neighbourhood", "neighbourhood_group", "property_type",
"room_type", "bed_type", "cancellation_policy", 'host_is_superhost',
'host_identity_verified', 'instant_bookable', 'require_guest_phone_verification',
'host_response_time'),
as.factor)
str(data)
data$host_response_time
load("../data/orig_data.RData")
library(tidyverse)
library(MASS)
library(scales)
library(data.table)
#ignore useless variables
data <- orig_data %>% dplyr::select(id,name,description, transit, house_rules, host_since, host_is_superhost,
host_listings_count, host_identity_verified, neighbourhood_cleansed,
neighbourhood_group_cleansed, zipcode, latitude, longitude, property_type,
room_type, accommodates, bathrooms, bedrooms, beds,bed_type, amenities,
square_feet, price, weekly_price, cleaning_fee, minimum_nights, availability_365,
number_of_reviews, instant_bookable, cancellation_policy,
require_guest_phone_verification,
host_response_time, host_verifications, security_deposit)
#host_has_profile_pic,  host_identity_verified
#or just read the condensed listings(with different filters)
#data = read.csv("listings_condensed.csv",header = T)
# nrow(data)
# colnames(data)
#rename variable
data <- data %>%
rename(neighbourhood = neighbourhood_cleansed,
neighbourhood_group = neighbourhood_group_cleansed)
#data structure
data <- data %>%
mutate(host_is_superhost = ifelse(is.na(host_is_superhost), 0, host_is_superhost)) %>%
mutate(bathrooms = ifelse(is.na(bathrooms), 0, bathrooms)) %>%
mutate(bedrooms = ifelse(is.na(bedrooms), 0, bedrooms)) %>%
mutate(number_of_reviews = ifelse(is.na(number_of_reviews), 0, number_of_reviews)) %>%
mutate(host_response_time = ifelse(is.na(host_response_time), 'no_record', host_response_time))
data <- data %>%
mutate_if(is.logical, as.numeric) %>% # convert True False to 1,0
mutate_at(c("neighbourhood", "neighbourhood_group", "property_type",
"room_type", "bed_type", "cancellation_policy", 'host_is_superhost',
'host_identity_verified', 'instant_bookable', 'require_guest_phone_verification',
'host_response_time'),
as.factor)
#edit data value
convert_price <- function(x) as.numeric(gsub("\\$|,", "", x))
string_split <- function(x) str_split(gsub("\\{|\\}|\"", "", x),",")
data <- data %>%
mutate_at(c("price", "weekly_price", "cleaning_fee", "security_deposit"), convert_price) %>%
mutate_at("amenities", string_split) %>%
mutate_at('host_verifications', string_split) %>%
mutate(hosted_years = round(as.double(difftime(Sys.Date(), host_since)) / 365, 1))
data <- data %>%
mutate(number_of_amenities = lengths(amenities)) %>%
mutate(number_of_verifications = lengths(host_verifications))
#amenity
data <- data %>%
mutate(amenities = tolower(amenities)) %>%
mutate(house_rules = tolower(house_rules)) %>%
mutate(name = tolower(name)) %>%
mutate(transit_level = as.numeric(is.na(transit))) %>%  #1:has description, 0:NA
mutate(rule_Pets = ifelse(grepl("no pets", data$house_rules), 0, 1)) %>%
mutate(have_pet = ifelse(grepl("cat", data$amenities) |
grepl("dog", data$amenities) |
grepl("pet", data$amenities), 1, 0)) %>%
mutate(have_shampoo = ifelse(grepl("shampoo", data$amenities), 1, 0)) %>%
mutate(have_gym = ifelse(grepl("gym", data$amenities), 1, 0)) %>%
mutate(have_washer = ifelse(grepl("washer", data$amenities), 1, 0)) %>%
mutate(have_kitchen = ifelse(grepl("kitchen", data$amenities), 1, 0)) %>%
mutate(have_parking = ifelse(grepl("parking", data$amenities), 1, 0)) %>%
mutate(have_elevator = ifelse(grepl("elevator", data$amenities), 1, 0)) %>%
mutate(have_laptop_workspac = ifelse(grepl("Laptop friendly workspace", data$amenities), 1, 0))
#property_type (combine factors)
data <- data.table(data)
data <- data[property_type %in% c("Barn", "Bed and breakfast", "Boat", "Bungalow","Bus","Cabin","Camper/RV","Casa particular (Cuba)", "Castle","Cave","Cottage","Dome house","Earth house","Farm stay","Houseboat","Island","Nature lodge","Other","Tent","Timeshare","Tiny house","Yurt"), property_type:= "Others"]
data <- data[property_type %in% c("Townhouse", "House", "Guesthouse", "Resort","Villa","Tiny house"), property_type:= "House"]
data <- data[property_type %in% c("Apartment","Condominium","Guest suite","Serviced apartment"), property_type:= "Apartment"]
data <- data[property_type %in% c("Hostel","Hotel","Boutique hotel","Aparthotel"), property_type:= "Hotel"]
data <- data[grepl("loft", data$name), property_type := "Loft"]
# Outliers
# need to check: accommodates, bathrooms, bedrooms, beds, price, cleaning_fee, minimum_nights, number_of_reviews...
### ATTENTION many 0 bedroom!
### ATTENTION many outliers in security_deposit
nrow(data)  #48377
# nrow(data %>% filter(beds > 20)) #5
# nrow(data %>% filter(bedrooms > 20)) #1
# nrow(data %>% filter(bedrooms == 1 & bathrooms > 4)) #39    ##1 bedroom & 3+ bathrooms usually comes with price under 100
# nrow(data %>% filter(price > 1500)) #137
# nrow(data %>% filter(cleaning_fee > 200 & minimum_nights < 30)) #381   ##prefer not to use cleaning_fee
# nrow(data %>% filter(minimum_nights > 90)) #361
# hist(data$number_of_reviews)
# hist(data$hosted_years)
data <- data  %>%
filter(beds <= 20, bedrooms <= 20,
bedrooms != 1 | bathrooms <= 4,
price < 1500 & price > 0,
cleaning_fee <= 200 | minimum_nights >= 30,
minimum_nights <= 90) %>%
filter(property_type != "Others") #havn't decided
nrow(data)  #37989
#check missing value
colSums(is.na(data))
# data <- data %>%
#   select(-c(weekly_price, square_feet, security_deposit))
nrow(data)
nrow(data %>% filter(!is.na(host_identity_verified)))
#remove some NA
data <- data %>%
filter(!is.na(host_identity_verified) )
#remove some NA
data <- data %>%
filter(!is.na(host_identity_verified) )
colSums(is.na(data))
#ignore useless variables
data <- orig_data %>% dplyr::select(id,name,description, transit, house_rules, host_since, host_is_superhost,
host_listings_count, host_identity_verified, neighbourhood_cleansed,
neighbourhood_group_cleansed, zipcode, latitude, longitude, property_type,
room_type, accommodates, bathrooms, bedrooms, beds,bed_type, amenities,
square_feet, price, weekly_price, cleaning_fee, minimum_nights, availability_365,
number_of_reviews, instant_bookable, cancellation_policy,
require_guest_phone_verification,
host_response_time, host_verifications, security_deposit)
#host_has_profile_pic,  host_identity_verified
#or just read the condensed listings(with different filters)
#data = read.csv("listings_condensed.csv",header = T)
#rename variable
data <- data %>%
rename(neighbourhood = neighbourhood_cleansed,
neighbourhood_group = neighbourhood_group_cleansed)
#data structure
data <- data %>%
mutate(host_is_superhost = ifelse(is.na(host_is_superhost), 0, host_is_superhost)) %>%
mutate(bathrooms = ifelse(is.na(bathrooms), 0, bathrooms)) %>%
mutate(bedrooms = ifelse(is.na(bedrooms), 0, bedrooms)) %>%
mutate(number_of_reviews = ifelse(is.na(number_of_reviews), 0, number_of_reviews)) %>%
mutate(host_response_time = ifelse(is.na(host_response_time), 'no_record', host_response_time)) %>%
mutate(cleaning_fee = ifelse(is.na(cleaning_fee), 0, cleaning_fee))
data <- data %>%
mutate_if(is.logical, as.numeric) %>% # convert True False to 1,0
mutate_at(c("neighbourhood", "neighbourhood_group", "property_type",
"room_type", "bed_type", "cancellation_policy", 'host_is_superhost',
'host_identity_verified', 'instant_bookable', 'require_guest_phone_verification',
'host_response_time'),
as.factor)
#edit data value
convert_price <- function(x) as.numeric(gsub("\\$|,", "", x))
string_split <- function(x) str_split(gsub("\\{|\\}|\"", "", x),",")
data <- data %>%
mutate_at(c("price", "weekly_price", "cleaning_fee", "security_deposit"), convert_price) %>%
mutate_at("amenities", string_split) %>%
mutate_at('host_verifications', string_split) %>%
mutate(hosted_years = round(as.double(difftime(Sys.Date(), host_since)) / 365, 1))
data <- data %>%
mutate(number_of_amenities = lengths(amenities)) %>%
mutate(number_of_verifications = lengths(host_verifications))
#amenity
data <- data %>%
mutate(amenities = tolower(amenities)) %>%
mutate(house_rules = tolower(house_rules)) %>%
mutate(name = tolower(name)) %>%
mutate(transit_level = as.numeric(is.na(transit))) %>%  #1:has description, 0:NA
mutate(rule_Pets = ifelse(grepl("no pets", data$house_rules), 0, 1)) %>%
mutate(have_pet = ifelse(grepl("cat", data$amenities) |
grepl("dog", data$amenities) |
grepl("pet", data$amenities), 1, 0)) %>%
mutate(have_shampoo = ifelse(grepl("shampoo", data$amenities), 1, 0)) %>%
mutate(have_gym = ifelse(grepl("gym", data$amenities), 1, 0)) %>%
mutate(have_washer = ifelse(grepl("washer", data$amenities), 1, 0)) %>%
mutate(have_kitchen = ifelse(grepl("kitchen", data$amenities), 1, 0)) %>%
mutate(have_parking = ifelse(grepl("parking", data$amenities), 1, 0)) %>%
mutate(have_elevator = ifelse(grepl("elevator", data$amenities), 1, 0)) %>%
mutate(have_laptop_workspac = ifelse(grepl("Laptop friendly workspace", data$amenities), 1, 0))
#property_type (combine factors)
data <- data.table(data)
data <- data[property_type %in% c("Barn", "Bed and breakfast", "Boat", "Bungalow","Bus","Cabin","Camper/RV","Casa particular (Cuba)", "Castle","Cave","Cottage","Dome house","Earth house","Farm stay","Houseboat","Island","Nature lodge","Other","Tent","Timeshare","Tiny house","Yurt"), property_type:= "Others"]
data <- data[property_type %in% c("Townhouse", "House", "Guesthouse", "Resort","Villa","Tiny house"), property_type:= "House"]
data <- data[property_type %in% c("Apartment","Condominium","Guest suite","Serviced apartment"), property_type:= "Apartment"]
data <- data[property_type %in% c("Hostel","Hotel","Boutique hotel","Aparthotel"), property_type:= "Hotel"]
data <- data[grepl("loft", data$name), property_type := "Loft"]
# Outliers
# need to check: accommodates, bathrooms, bedrooms, beds, price, cleaning_fee, minimum_nights, number_of_reviews...
### ATTENTION many 0 bedroom!
### ATTENTION many outliers in security_deposit
nrow(data)  #48377
# nrow(data %>% filter(beds > 20)) #5
# nrow(data %>% filter(bedrooms > 20)) #1
# nrow(data %>% filter(bedrooms == 1 & bathrooms > 4)) #39    ##1 bedroom & 3+ bathrooms usually comes with price under 100
# nrow(data %>% filter(price > 1500)) #137
# nrow(data %>% filter(cleaning_fee > 200 & minimum_nights < 30)) #381   ##prefer not to use cleaning_fee
# nrow(data %>% filter(minimum_nights > 90)) #361
# hist(data$number_of_reviews)
# hist(data$hosted_years)
data <- data  %>%
filter(beds <= 20, bedrooms <= 20,
bedrooms != 1 | bathrooms <= 4,
price < 1500 & price > 0,
cleaning_fee <= 200 | minimum_nights >= 30,
minimum_nights <= 90) %>%
filter(property_type != "Others") #havn't decided
nrow(data)  #37989
#check missing value
colSums(is.na(data))
#remove some NA
data <- data %>%
filter(!is.na(host_identity_verified) )
colSums(is.na(data))
